★動きの4原則（オブジェクトには以下のメンバーは完備されている）
1.位置（position）: オブジェクトを移動する
2.スケール（scale）: オブジェクトのサイズを変更する
3.回転（rotation）: オブジェクトを回転させる
4.クォータニオン（quaternion）: これもオブジェクトを回転させる（後で詳しく説明します）
★流れ
1.オブジェクトを作る（メッシュまで）
2.動きを作る
3.レンダリングする
4.アニメーション

必要なもの
＊シーン（テレビの画面）
＊カメラ（カメラ。位置や角度を設定する）
＊オブジェクト（被写体がないと始まらん）
＊レンダリング(いくらJavascriptでかいても、最終的にブラウザが読み込むのはHTML)



1.オブジェクトで最低限必要なもの
1-1.形：Geometry　形状/幾何構造/幾何学/3D オブジェクトの形状や構造
1-2.形に色などのエフェクトをつける：material　素材/材質
1-3.形と色をマージする：Mesh（メッシュ）
1-4.オブジェクトのばしょを決める（ポジション）⇒これはかいてないやつもあるのはなんでだろ
1-5.シーンに加える：画面に表示させるイメージかな

const geometry = new THREE.BoxGeometry();
const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });
const cube = new THREE.Mesh(geometry, material);
scene.add(cube);

2.カメラで最低限必要なもの
2-1.アスペクト比（Aspect Ratio） とは、画像や画面の 幅と高さの比率
2-2.カメラの位置を設定する：camera.position.z = 5;
2-3.シーンに加える：画面に表示させるイメージかな
scene.add(camera);
const camera = new THREE.PerspectiveCamera(75, sizes.width / sizes.height, 0.1, 1000);
camera.position.z = 5;
scene.add(camera);
// レンダリングさせる：HTML⇔CANVASをつなげる
3-1.レンダラーを宣言する
3-2.HTMLで表示させる範囲を入力する
3-3.ついにDOMとCANVASがここでつながる
const renderer = new THREE.WebGLRenderer();
renderer.setSize(sizes.width, sizes.height);
document.body.appendChild(renderer.domElement);

＊＊＊ここで静的に動かないものはこれでおしまい。
次はうごきについて

