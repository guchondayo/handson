共通点
レンダリング対象FROM-TO
主な違い
1.角度とアスペクト比
2.４方向
3D
const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
2D
const camera = new THREE.OrthographicCamera(- 1, 1, 1, - 1, 0.1, 100)


















序論
私たちは既に PerspectiveCamera（遠近カメラ）を作成しましたが、ドキュメントを見ると他にもいくつかの種類のカメラがあることが分かります。

1.Camera（カメラ）
Camera クラスは抽象クラスと呼ばれるもので、直接使用するのではなく、共通のプロパティやメソッドにアクセスするために継承することができます。以下のクラスのいくつかは Camera クラスを継承しています。

2.ArrayCamera（アレイカメラ）
ArrayCamera は、複数のカメラを使ってシーンを複数回レンダリングするために使用されます。各カメラはキャンバスの特定の領域をレンダリングします。これは、昔のゲームコンソールでマルチプレイヤーゲームを分割画面で共有していたような感じを想像できます。

3.StereoCamera（ステレオカメラ）
StereoCamera は、2つのカメラを使ってシーンをレンダリングし、目を模倣してパララックス効果（視差効果）を作り出し、脳に奥行きがあると錯覚させます。これを見るには VR ヘッドセットや赤青メガネなどの適切な装置が必要です。

4.CubeCamera（キューブカメラ）
CubeCamera は、前方、後方、左側、右側、上方、下方の各方向を向いたレンダリングを取得し、周囲のレンダリングを作成するために使用されます。これは、反射用の環境マップやシャドウマップを作成するために使用できます。これについては後で説明します。

5.OrthographicCamera（直交カメラ）
OrthographicCamera は、遠近感なしにシーンの直交レンダリングを作成するために使用されます。例えば、エイジ オブ エンパイアのような RTS（リアルタイムストラテジー）ゲームを作成する際に便利です。このカメラを使うと、カメラからの距離に関係なく要素が画面上で同じサイズになります。

6.PerspectiveCamera（遠近カメラ）
PerspectiveCamera は、既に使用したもので、遠近感を持った現実のカメラをシミュレートします。

詳
細解説
カメラの種類と用途
Camera（カメラ）

抽象クラス: 他のカメラの共通部分をまとめたクラス。直接使わず、継承して使用。
ArrayCamera（アレイカメラ）

用途: キャンバスの特定の領域を複数のカメラでレンダリングする。
例: 昔のコンソールゲームの分割画面。
StereoCamera（ステレオカメラ）

用途: 視差効果で奥行きを表現。
必要機材: VR ヘッドセットや赤青メガネ。
CubeCamera（キューブカメラ）

用途: 6方向のレンダリングを取得し、反射やシャドウマップ用の環境マップを作成。
使用例: 周囲のシーン全体の映像を取得。
OrthographicCamera（直交カメラ）

用途: 遠近感なしでシーンをレンダリング。
使用例: RTS ゲームの等サイズ表示。
PerspectiveCamera（遠近カメラ）

用途: 遠近感を持つ現実のカメラをシミュレート。
既使用: 既に学習で使用したカメラ