1.



【お助けメモ】
コンテキストって今まで要素だと思ってたんだでど、実際のイメージは
『絵を描く筆』
って覚えたほうがいいなと思った
なぜなら、今までは要素の数だけコンテキストがそんざいするとおもっていたから

ChatGPT

理解が進んできましたね。実際に、Canvasのコンテキストは、描画操作を行うための「筆」や「ペン」のようなものです。Canvas要素は、描画領域を提供しますが、それ自体は描画を行う能力を持っていません。その代わりに、コンテキスト（筆）を使用して、Canvas上に絵や図形を描画します。

例えば、Canvas要素に2Dコンテキストを取得する場合、getContext('2d') を呼び出します。これにより、2D描画のためのコンテキスト（2D筆）が作成され、それを使って図形やテキストを描画できます。同様に、3Dグラフィックスを扱う場合は、getContext('webgl') を使用して、WebGLコンテキストを取得します。

ですので、Canvasの要素数に関係なく、1つのCanvas要素に1つのコンテキストが関連付けられます。そのコンテキストを使って、描画操作を行うことができます。

このように、「絵を描く筆」という観点で考えると、Canvasとそのコンテキストの関係がより直感的に理解できるかもしれません。


【MDN】
https://developer.mozilla.org/ja/docs/Web/API/Canvas_API/Tutorial/Drawing_shapes

strokeRect(x, y, width, height)
矩形の輪郭を描きます。

【イメージ】
1.canvasは画用紙
2.contextは筆
【配置】
1.X,2.Y,3.長さ4.高さ
【四角形の書き方】
1.色を決める(絵具をつける)
2.実際に書く
【要素が重なったときは？】
1.後に書いたほうが上になる

【★塗りつぶすか否か】
fillRect
strokeRect
【★消しゴム】
clearRect
【★直線はstroke/三角形以上はfill】
    ctx.beginPath();
    ctx.moveTo(75, 50);
    ctx.lineTo(100, 75);
    ctx.lineTo(100, 25);
    ctx.fill();
    ctx.stroke();

